{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "$id": "NxReactStorybookConfigure",
  "title": "React Storybook Configure",
  "description": "Set up Storybook for a React app or library.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Project name",
      "$default": {
        "$source": "argv",
        "index": 0
      }
    },
    "configureCypress": {
      "type": "boolean",
      "description": "Run the cypress-configure generator.",
      "x-prompt": "Configure a cypress e2e app to run against the storybook instance?",
      "default": true
    },
    "generateStories": {
      "type": "boolean",
      "description": "Automatically generate `*.stories.ts` files for components declared in this project?",
      "x-prompt": "Automatically generate *.stories.ts files for components declared in this project?",
      "default": true
    },
    "generateCypressSpecs": {
      "type": "boolean",
      "description": "Automatically generate `*.spec.ts` files in the Cypress E2E app generated by the `cypress-configure` generator.",
      "x-prompt": "Automatically generate *.spec.ts files in the Cypress E2E app generated by the cypress-configure generator?",
      "default": true
    },
    "cypressDirectory": {
      "type": "string",
      "description": "A directory where the Cypress project will be placed. Placed at the root by default."
    },
    "js": {
      "type": "boolean",
      "description": "Generate JavaScript files rather than TypeScript files.",
      "default": false
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint", "tslint"],
      "default": "eslint"
    },
    "projectBuildConfig": {
      "description": "Provide a custom projectBuildConfig for the Angular executor. If left blank, Nx will use the default.",
      "type": "string"
    },
    "standaloneConfig": {
      "description": "Split the project configuration into `<projectRoot>/project.json` rather than including it inside `workspace.json`.",
      "type": "boolean"
    }
  },
  "required": ["name"]
}
